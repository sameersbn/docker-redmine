#!/bin/bash

DB_HOST=${DB_HOST:-localhost}
DB_PORT=${DB_PORT:-3306}
DB_NAME=${DB_NAME:-redmine_production}
DB_USER=${DB_USER:-root}
DB_PASS=${DB_PASS:-}
DB_POOL=${DB_POOL:-5}

MEMCACHED_SIZE=${MEMCACHED_SIZE:-64}

SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
SMTP_PORT=${SMTP_PORT:-587}
SMTP_USER=${SMTP_USER:-}
SMTP_PASS=${SMTP_PASS:-}

PASSENGER_MAX_POOL_SIZE=${PASSENGER_MAX_POOL_SIZE:-6}
PASSENGER_MIN_INSTANCES=${PASSENGER_MIN_INSTANCES:-1}
PASSENGER_MAX_REQUESTS=${PASSENGER_MAX_REQUESTS:-0}
PASSENGER_POOL_IDLE_TIME=${PASSENGER_POOL_IDLE_TIME:-300}

export APACHE_RUN_USER="www-data"
export APACHE_RUN_GROUP="www-data"
export APACHE_LOG_DIR="/var/log/apache2"
export APACHE_PID_FILE="/var/run/apache2.pid"
export APACHE_LOCK_DIR="/var/run/lock/apache2"
export APACHE_RUN_DIR="/var/run/apache2"

cat >> /etc/apache2/apache2.conf <<EOF

PassengerMaxPoolSize ${PASSENGER_MAX_POOL_SIZE}
PassengerMinInstances ${PASSENGER_MIN_INSTANCES}
PassengerMaxRequests ${PASSENGER_MAX_REQUESTS}
PassengerPoolIdleTime ${PASSENGER_POOL_IDLE_TIME}
EOF

# generate a password for root.
ROOT_PASSWORD=$(pwgen -c -n -1 12)
echo "root:$ROOT_PASSWORD" | chpasswd
echo User: root Password: $ROOT_PASSWORD

# start supervisord
/usr/bin/supervisord

# start mysql server if ${DB_HOST} is localhost
if [ "${DB_HOST}" == "localhost" ]; then
	cat > /etc/supervisor/conf.d/mysqld.conf <<EOF
[program:mysqld]
priority=20
directory=/tmp
command=/usr/bin/mysqld_safe
user=root
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)s.log
EOF

	# fix permissions and ownership of /var/lib/mysql
	chown -R mysql:mysql /var/lib/mysql
	chmod 700 /var/lib/mysql

	# initialize MySQL data directory
	if [ ! -d /var/lib/mysql/mysql ]; then
		mysql_install_db --user=mysql
	fi

	supervisorctl update

	# wait for mysql server to start (max 120 seconds)
	timeout=120
	while ! mysqladmin -uroot ${DB_PASS:+-p$DB_PASS} status >/dev/null 2>&1
	do
		timeout=$(expr $timeout - 1)
		if [ $timeout -eq 0 ]; then
			echo "Failed to start mysql server"
			exit 1
		fi
		sleep 1
	done

	if ! echo "USE ${DB_NAME}" | mysql -uroot ${DB_PASS:+-p$DB_PASS} >/dev/null 2>&1; then
		echo "CREATE DATABASE IF NOT EXISTS \`${DB_NAME}\` DEFAULT CHARACTER SET \`utf8\` COLLATE \`utf8_unicode_ci\`;" | mysql -uroot ${DB_PASS:+-p$DB_PASS}
		echo "GRANT SELECT, LOCK TABLES, INSERT, UPDATE, DELETE, CREATE, DROP, INDEX, ALTER ON \`${DB_NAME}\`.* TO 'root'@'localhost';" | mysql -uroot ${DB_PASS:+-p$DB_PASS}
	fi
fi

# start memcached and install config if ${MEMCACHED_SIZE} is not 0
if [ "${MEMCACHED_SIZE}" != "0" ]; then
        cat > /etc/supervisor/conf.d/memcached.conf <<EOF
[program:memcached]
priority=20
directory=/tmp
command=/usr/bin/memcached -m ${MEMCACHED_SIZE}
user=www-data
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/%(program_name)s.log
stderr_logfile=/var/log/supervisor/%(program_name)s.log
EOF

        supervisorctl update

        cat > /redmine/config/additional_environment.rb << EOF
config.gem 'dalli'
config.action_controller.perform_caching  = true
config.cache_classes = true
config.cache_store = :dalli_store, "127.0.0.1:11211"
EOF
fi

chmod 755 /redmine/files
chown www-data:www-data /redmine/files

cd /redmine
sudo -u www-data -H sed 's/{{DB_HOST}}/'${DB_HOST}'/' -i config/database.yml
sudo -u www-data -H sed 's/{{DB_PORT}}/'${DB_PORT}'/' -i config/database.yml
sudo -u www-data -H sed 's/{{DB_NAME}}/'${DB_NAME}'/' -i config/database.yml
sudo -u www-data -H sed 's/{{DB_USER}}/'${DB_USER}'/' -i config/database.yml
sudo -u www-data -H sed 's/{{DB_PASS}}/'${DB_PASS}'/' -i config/database.yml
sudo -u www-data -H sed 's/{{DB_POOL}}/'${DB_POOL}'/' -i config/database.yml

# configure mail delivery
if [ -n "${SMTP_HOST}" -a -n "${SMTP_USER}" -a -n "${SMTP_PASS}" ]; then
	cat >> config/configuration.yml <<EOF

default:
  email_delivery:
    delivery_method: :smtp
    smtp_settings:
      address: ${SMTP_HOST}
      port: ${SMTP_PORT}
      authentication: :login
      user_name: "${SMTP_USER}"
      password: "${SMTP_PASS}"
EOF
	chown www-data:www-data config/configuration.yml
fi

db_migrate () {
	# isolate the plugins
	sudo -u www-data -H mv plugins plugins-1
	sudo -u www-data -H RAILS_ENV=production rake db:create
	sudo -u www-data -H RAILS_ENV=production rake db:migrate
	sudo -u www-data -H mv plugins-1 plugins
	sudo -u www-data -H RAILS_ENV=production rake redmine:plugins:migrate
	sudo -u www-data -H RAILS_ENV=production rake tmp:cache:clear
	sudo -u www-data -H RAILS_ENV=production rake tmp:sessions:clear
}

redmine_start () {
	db_migrate

	sudo -u www-data -H RAILS_ENV=production rake generate_secret_token
	sudo -u www-data -H touch tmp/restart.txt

	# kickstart the rails application
	wget "http://localhost" -O /dev/null

	tail -F /var/log/apache2/other_vhosts_access.log
}

redmine_help () {
	echo "Available options:"
	echo " app:start          - Starts the redmine server (default)"
	echo " app:db:migrate     - Migrate the database."
	echo " app:help           - Displays the help"
	echo " [command]          - Execute the specified linux command eg. bash."
}

case "$1" in
	app:start)
		redmine_start
		;;
	app:db:migrate)
		db_migrate
		;;
	app:help)
		redmine_help
		;;
	*)
		if [ -x $1 ]; then
			$1
		else
			prog=$(which $1)
			if [ -n "${prog}" ] ; then
				shift 1
				$prog $@
			else
				redmine_help
			fi
		fi
		;;
esac

exit 0
